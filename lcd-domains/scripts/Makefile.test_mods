#
# test modules/examples build
#
# This is included in the top-level Makefile, and some
# variables are defined there.
# 

LCD_TEST_MODULES_DIR=$(PWD)/test_mods
export LCD_TEST_MODULES_DIR

LCD_TEST_MODULES_BUILD_DIR=$(LCD_BUILD_DIR)/test_mods
export LCD_TEST_MODULES_BUILD_DIR

# Collect all of the example directories and kbuilds
TEST_MODULES_DIRS=$(shell cd $(LCD_TEST_MODULES_DIR) && \
	find . -mindepth 1 -type d)
TEST_MODULES_KBUILDS=$(shell cd $(LCD_TEST_MODULES_DIR) && \
	find . -name "Kbuild")

TEST_MODULES_BUILD_DIRS=$(foreach dir,$(TEST_MODULES_DIRS), \
	$(LCD_TEST_MODULES_BUILD_DIR)/$(dir))
TEST_MODULES_BUILD_KBUILDS=$(foreach kb,$(TEST_MODULES_KBUILDS), \
	$(LCD_TEST_MODULES_BUILD_DIR)/$(kb))

KLIBLCD_SYMBOLS=$(MICROKERNEL_BUILD_DIR)/Module.symvers

# ------------------------------------------------------------
# LIBDEKER toggling

ifneq ($(DEKER),)

DEKER_BUILD=y

ISOLATED_CC_FLAGS=$(LIBDEKER_CFLAGS)

LIBKERNEL_PATH_CMD:=$(shell scripts/relpath.py $(LIBDEKER_BUILD_DIR)/libdeker.a $(shell dirname $(shell readlink -f $@))) $(shell scripts/relpath.py $(LIBLCD_BUILD_DIR)/liblcd.a $(shell dirname $(shell readlink -f $@)))

MAYBE_LIBDEKER=$(LIBDEKER_BUILD_PATH)/libdeker/libdeker.a

LCD_TEST_MODS_KBUILD_BAD_CFLAGS=$(LIBDEKER_BAD_CFLAGS)

else # ! DEKER

DEKER_BUILD=n

ISOLATED_CC_FLAGS=$(LIBLCD_CFLAGS)

LIBKERNEL_PATH_CMD:=$(shell scripts/relpath.py $(LIBLCD_BUILD_DIR)/liblcd.a $(shell dirname $(shell readlink -f $@)))

endif

export NON_ISOLATED_CC_FLAGS=$(MICROKERNEL_CFLAGS)
export ISOLATED_CC_FLAGS
export DEKER_BUILD

test_mods: $(LCD_TEST_MODULES_BUILD_DIR)/Kbuild \
	$(TEST_MODULES_BUILD_KBUILDS) | \
	$(LIBLCD_BUILD_DIR)/liblcd.a $(TEST_MODULES_BUILD_DIRS) \
	$(MAYBE_LIBDEKER)  
	$(MAKE) -C .. M=$(LCD_TEST_MODULES_BUILD_DIR) \
	KBUILD_EXTRA_SYMBOLS=$(KLIBLCD_SYMBOLS) $(MAKEFLAGS)

$(LCD_TEST_MODULES_BUILD_DIR)/Kbuild: scripts/Kbuild.test_mods | \
	$(TEST_MODULES_BUILD_DIRS)
	cp scripts/Kbuild.test_mods $(LCD_TEST_MODULES_BUILD_DIR)/Kbuild

# This rule does the external source hack (define "src" in Kbuild file)
$(LCD_TEST_MODULES_BUILD_DIR)/%/Kbuild: $(LCD_TEST_MODULES_DIR)/%/Kbuild | \
	$(TEST_MODULES_BUILD_DIRS)
	@echo "  KBUILD     $^"
	@printf "#\n# BEGIN: Auto-generated part.\n#\n\n" > $@ && \
	printf "LIBKERNEL = $(LIBKERNEL_PATH_CMD)\n\n" >> $@ && \
	printf "src = $(shell dirname `readlink -f $^`)\n\n" >> $@ && \
	printf "#\n# END: Auto-generated part.\n#\n\n" >> $@ && \
	cat $^ >> $@

$(TEST_MODULES_BUILD_DIRS):
	@echo "  MKDIR      $@"
	@mkdir -p $@

clean-test_mods:
	if test -e $(LCD_TEST_MODULES_BUILD_DIR)/Kbuild; then \
		$(MAKE) -C .. M=$(LCD_TEST_MODULES_BUILD_DIR) clean; \
	fi

clean += clean-test_mods

.PHONY += \
	test_mods \
	clean-test_mods
